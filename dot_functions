function reload-shell {
	source ~/.zshrc
}

function note {
	local filename="${1}"
	local data_path="~/.local/share/note"
	local last_edit_ptr_file=".last_edit"
	local path_to_file="${data_path}/${filename}"
	local last_line="1"
	mkdir -p "${data_path}"

	if [[ -f "${data_path}/${last_edit_ptr_file}" ]]; then
		local last_entry=$(tail -n 1 "${data_path}/${last_edit_ptr_file}")
		local last_entry_nl=$(echo "${last_entry}" | tr "," "\n")
		echo -e "${last_entry_nl}"
		echo "press any key to continue"
		read  -n 1 mainmenuinput
		local last_file=$(echo "${last_entry_nl}" | grep "file:" | cut -d ':' -f 2)
		if [[ "${filename}" -eq "${last_file}" ]]; then
			last_line=$(echo "${last_entry_nl}" | grep "last-line:" | cut -d ':' -f 2)
		fi
	fi

	cd "${data_path}"
	hx "${filename}:${last_line}"
	last_line=$(wc -l "${filename}" | cut -d ' ' -f 1)
	local file_metadata=$(cat "${filename}")
	local author=$(echo "${file_metadata}" | cut -d ' ' -f 3)
	local iso_date=$(echo "${file_metadata}" | cut -d ' ' -f 6)
	local iso_time=$(echo "${file_metadata}" | cut -d ' ' -f 7)
	local iso_datetime="${iso_date}:${iso_time}"
	local entry="file:${filename},author:${author},datetime:${iso_datetime},last-line:${last_line}"
	echo -e "${entry}" >> "${last_edit_ptr_file}"
	cd -
}

function set-font-size {
	local size="${1}"
	local is_number_regex="^[0-9]+([.][0-9]+)?$"
	if ! [[ $yournumber =~ $re ]] ; then
		echo -e "not a valid number"
		return 1
	fi
	sed -i "s/ size: .*$/ size: ${size}/" ~/.config/alacritty/font.yml
}

function set-theme {
	local theme="${1}"
	local alacritty_config_dir="${HOME}/.config/alacritty"
	ln -fs "${alacritty_config_dir}/themes/themes/${theme}.yaml" "${alacritty_config_dir}/theme.yml"

	local helix_config_file="${HOME}/.config/helix/config.toml"
	sed -i "/^theme /s/=.*$/= '${theme}'/" "${helix_config_file}"
}

function _devbox_tmux_adapter {
	local session_name="${1}"
	tmux new -As "${session_name}"
}

function _devbox_zellij_adapter {
	local session_name="${1}"
	zellij -s "${session_name}"
	if [[ "$?" -ne 0 ]]; then
		zellij a "${session_name}"
	fi
}

# Create or join an existing multiplexer's session
function devbox {
	local session_name="${1:-dev}"
	case "${DEVBOX_MULTIPLEXER}" in
		"tmux")
			_devbox_tmux_adapter "${session_name}"
		;;
		"zellij")
			_devbox_zellij_adapter "${session_name}"
		;;
		*)
			_devbox_zellij_adapter "${session_name}"
		;;
	esac
}
